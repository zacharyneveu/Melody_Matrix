let color_data = { "0": { "0": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "1": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "2": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "3": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "4": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "5": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"] }, "1": { "0": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "1": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "2": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "3": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "4": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "5": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"] }, "2": { "0": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "1": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "2": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "3": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "4": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "5": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"] }, "3": { "0": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "1": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "2": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "3": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "4": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "5": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"] }, "4": { "0": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "1": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "2": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "3": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "4": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "5": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"] }, "5": { "0": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "1": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "2": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "3": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "4": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"], "5": ["0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0", "0,0,0"] } }
let volume = 1
let spheres = []
let currentGenre

const color_dictionary = { "class": [[146, 67, 65], [178, 106, 66], [210, 144, 68], [242, 183, 69], [245, 198, 103], [248, 212, 137], [251, 227, 171], [252, 236, 194], [254, 246, 217], [255, 255, 240], [219, 192, 182], [182, 130, 123]], "pop": [[242, 73, 154], [246, 106, 169], [251, 139, 185], [255, 172, 200], [238, 195, 167], [222, 219, 133], [205, 242, 100], [208, 246, 118], [210, 249, 136], [213, 253, 154], [223, 193, 154], [232, 133, 154]], "r&b": [[106, 67, 158], [79, 67, 181], [53, 66, 203], [26, 66, 226], [93, 74, 215], [159, 82, 203], [226, 90, 192], [236, 97, 193], [245, 103, 195], [255, 110, 196], [205, 96, 183], [156, 81, 171]], "folk": [[122, 45, 15], [144, 82, 29], [167, 120, 42], [189, 157, 56], [201, 141, 46], [212, 125, 36], [224, 109, 26], [233, 134, 41], [241, 159, 56], [250, 184, 71], [207, 138, 52], [165, 91, 34]], "hiphop": [[3, 90, 45], [32, 95, 52], [60, 99, 58], [89, 104, 65], [92, 103, 77], [96, 101, 90], [99, 100, 102], [114, 119, 126], [130, 137, 150], [145, 156, 174], [98, 134, 131], [50, 112, 88]], "edm": [[178, 69, 255], [192, 111, 245], [206, 153, 234], [220, 195, 224], [166, 215, 156], [111, 235, 88], [57, 255, 20], [106, 255, 13], [155, 255, 7], [204, 255, 0], [195, 193, 85], [187, 131, 170]], "rock": [[206, 17, 11], [222, 11, 7], [239, 6, 4], [255, 0, 0], [255, 55, 0], [255, 110, 0], [255, 165, 0], [255, 193, 7], [255, 220, 14], [255, 248, 21], [239, 171, 18], [222, 94, 14]], "blues": [[19, 38, 78], [46, 59, 86], [72, 79, 94], [99, 100, 102], [115, 91, 92], [130, 81, 83], [146, 72, 73], [120, 67, 122], [94, 63, 170], [68, 58, 219], [52, 51, 172], [35, 45, 125]], "default": [[171, 0, 52], [170, 102, 123], [188, 68, 139], [187, 117, 252], [144, 0, 255], [128, 140, 252], [142, 202, 255], [195, 241, 255], [50, 205, 52], [255, 255, 1], [255, 136, 20], [255, 0, 0]] }
const fr = 500

function setup() {
    forRange(x => forRange(y => forRange(z => {
        let color_arr = []
        spheres.push({ x, y, z, color_arr })
    })))

    createCanvas(windowWidth, windowHeight, WEBGL);
    setInterval(loadData, 500)

    //setInterval(changeVolume, 100)
    frameRate(fr);
    Dw.EasyCam.prototype.apply = function (n) {
        var o = this.cam;
        n = n || o.renderer,
            n && (this.camEYE = this.getPosition(this.camEYE), this.camLAT = this.getCenter(this.camLAT), this.camRUP = this.getUpVector(this.camRUP), n._curCamera.camera(this.camEYE[0], this.camEYE[1], this.camEYE[2], this.camLAT[0], this.camLAT[1], this.camLAT[2], this.camRUP[0], this.camRUP[1], this.camRUP[2]))
    };
    easycam = createEasyCam(this._renderer, { distance: 1000 });
    document.oncontextmenu = () => false;
}

function loadData() {
    // matrix_array is a variable in global scope
    // come from the visual.js
    color_data = matrix_array
    currentGenre = globalGenre
    changeColor()
}

function changeColor() {
    if (color_data) {
        spheres.forEach(obj => {
            let index_x = coordToIndex(obj.x)
            let index_y = coordToIndex(obj.y)
            let index_z = coordToIndex(obj.z)
            obj.color_arr = colorPart(index_x, index_y, index_z)
        })
    }
}

function windowResized() {
    resizeCanvas(windowWidth, windowHeight)
}

function changeVolume() {
    volume = Math.random() % 10 + 1
}

function colorPart(x_value, y_value, z_value) {
    let arr = color_data[5 - y_value][5 - z_value][x_value]
    if (arr) {
        let noteIndex = 5 - z_value < 3 ? x_value : x_value + 6
        let colorArray = color_dictionary[currentGenre][noteIndex]
        return colorArray
    } else {
        return [0, 0, 0]
    }
}

function forRange(fn) {
    const cubeSpacing = 100
    for (let i = -250; i <= 250; i += cubeSpacing) {
        fn(i);
    }
}

function coordToIndex(num) {
    return (num / 50 + 5) / 2
}

function draw() {
    // comment out this line below and see magic happens
    background(155);

    //rotateY(millis() / 2000);

    let volume = 1
    if (color_data) {
        spheres.forEach(obj => {
            //let pos = createVector(obj.x, obj.y, obj.z);
            noStroke()
            push();
            translate(volume * obj.x, volume * obj.y, volume * obj.z);
            fill(obj.color_arr[0], obj.color_arr[1], obj.color_arr[2]);
            sphere(18)
            pop();
        })
    }

}
